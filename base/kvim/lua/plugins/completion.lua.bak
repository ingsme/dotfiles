return {
	{
		"hrsh7th/nvim-cmp",
		event = "InsertEnter",
		dependencies = {
			"saadparwaiz1/cmp_luasnip",
			"L3MON4D3/LuaSnip",
			"hrsh7th/cmp-nvim-lsp",
			"hrsh7th/cmp-buffer",
			"hrsh7th/cmp-path",
		},
		keys = {
			{
				"<TAB>",
				function(fallback)
					local cmp = require("cmp")
					local luasnip = require("luasnip")
					local has_words_before = function()
						unpack = unpack or table.unpack
						local line, col = unpack(vim.api.nvim_win_get_cursor(0))
						return col ~= 0
							and vim.api.nvim_buf_get_lines(0, line - 1, line, true)[1]:sub(col, col):match("%s")
								== nil
					end
					if cmp.visible() then
						cmp.select_next_item()
					elseif luasnip.expand_or_locally_jumpable() then
						luasnip.expand_or_jump()
					elseif has_words_before() then
						cmp.complete()
					else
						fallback()
					end
				end,
				mode = { "i", "s" },
				desc = "",
			},
			{
				"<S-TAB>",
				function(fallback)
					local cmp = require("cmp")
					local luasnip = require("luasnip")
					if cmp.visible() then
						cmp.select_prev_item()
					elseif luasnip.jumpable(-1) then
						luasnip.jump(-1)
					else
						fallback()
					end
				end,
				mode = { "i", "s" },
				desc = "",
			},
		},
	},
	{
		"L3MON4D3/LuaSnip",
		event = "VeryLazy",
		dependencies = {
			"honza/vim-snippets",
		},
	},
	{
		"honza/vim-snippets",
		event = "VeryLazy",
		config = function()
			require("luasnip.loaders.from_snipmate").lazy_load()
		end,
	},
}
